import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import "./ValidateMail.scss";
import banner from "../../../assets/bannerdangnhap.jpg";

const ValidateMail = () => {
  const [otp, setOtp] = useState("");
  const [message, setMessage] = useState("");
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();

  // üîπ L·∫•y email t·ª´ localStorage (kh√¥ng b·ªã m·∫•t khi refresh)
  const email = localStorage.getItem("userEmail")?.trim().toLowerCase() || "";

  useEffect(() => {
    if (!email) {
      setMessage("Kh√¥ng t√¨m th·∫•y email. Quay l·∫°i ƒëƒÉng k√Ω!");
    }
  }, [email]);

  // X√°c th·ª±c OTP
  const handleConfirmOtp = async (e) => {
    e.preventDefault();
    if (!email || !otp) {
      setMessage("Email ho·∫∑c m√£ OTP kh√¥ng h·ª£p l·ªá!");
      return;
    }
  
    setLoading(true);
    setMessage("");
  
    const payload = {
      email: email.trim().toLowerCase(),  // ƒê·∫£m b·∫£o email kh√¥ng c√≥ kho·∫£ng tr·∫Øng
      otp: otp.toString().trim(),
    };
  
    console.log("üì§ D·ªØ li·ªáu g·ª≠i l√™n API:", payload); // Ki·ªÉm tra d·ªØ li·ªáu g·ª≠i ƒëi
  
    try {
      const response = await axios.post("https://localhost:7128/api/Auth/ConfirmOTP", payload, {
        headers: { "Content-Type": "application/json" },
        withCredentials: true,
      });
  
      console.log("‚úÖ K·∫øt qu·∫£ API:", response.data);
  
      if (response.status === 200) {
        setMessage("X√°c th·ª±c th√†nh c√¥ng! Chuy·ªÉn h∆∞·ªõng...");
        setTimeout(() => navigate("/login"), 2000);
      } else {
        setMessage("M√£ OTP kh√¥ng ƒë√∫ng, vui l√≤ng th·ª≠ l·∫°i.");
      }
    } catch (error) {
      console.error("‚ùå L·ªói API:", error.response);
      setMessage("L·ªói khi x√°c th·ª±c OTP. Ki·ªÉm tra l·∫°i m√£ v√† email!");
    } finally {
      setLoading(false);
    }
  };
  
  

  return (
    <div className="container signup-wrapper">
      <div className="row justify-content-center align-items-center min-vh-100">
        <div className="col-md-8 p-0">
          <div className="signup-container row no-gutters h-100">
            <div className="col-md-6 banner">
              <img src={banner} alt="Banner" className="img-fluid h-100" />
            </div>
            <div className="col-md-6 signup-form-container d-flex align-items-center justify-content-center">
              <form className="signup-form" onSubmit={handleConfirmOtp}>
                <h2>X√°c nh·∫≠n OTP</h2>
                {email && <p>Email: {email}</p>}
                <div className="form-group">
                  <label htmlFor="otp">Nh·∫≠p m√£ OTP</label>
                  <input
                    type="text"
                    id="otp"
                    value={otp}
                    onChange={(e) => setOtp(e.target.value)}
                    placeholder="M√£ OTP"
                    required
                  />
                </div>
                <button type="submit" className="btn verify-btn" disabled={loading}>
                  {loading ? "ƒêang x√°c th·ª±c..." : "X√°c th·ª±c"}
                </button>
                {message && <p className="message">{message}</p>}
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ValidateMail;
